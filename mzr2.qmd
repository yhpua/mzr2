---
title: "Bayesian MZ Rsquared"
date: "`r format(Sys.time(), '%d %B, %Y')`"
toc: true
format:
  html:
    html-math-method: katex
    code-tools: true
    self-contained: true
    toc-location: left
execute:
  warning: false
  cache: true
---

```{r }
#| echo: TRUE
library(rms)
library(rmsb)
options("scipen"= 4, digits = 4) 

R2mz <- function(fit, ci = 0.95) {
  
  #' McKelvey & Zavoina (1975) https://doi.org/10/dqfhpp
  #' Modified from codes written by Andrew Milne (https://github.com/paul-buerkner/brms/issues/639)
  
  y_pred  <- predict(fit, type = "lp", posterior.summary = "all")
  var_fit <- apply(y_pred, 1, var)
  var_res <- pi^2 / 3 
  R2_mz   <- var_fit / (var_fit + var_res)
  ggdist::median_hdci(R2_mz, .width = ci)
  }
```





## Short Ordinal Response Variable
```{r }
#| echo: TRUE
short_orm  <- orm(gear   ~ am + disp, data = mtcars, x = TRUE, y = TRUE)
short_blrm <- blrm(gear  ~ am + disp, iter = 3000, data = mtcars)
short_orm
short_blrm

```


```{r }
#| echo: TRUE
short_orm$stats[grepl("r2", names(short_orm$stats), ignore.case = TRUE )]
R2mz(short_blrm)
```
 
## Long ordinal/continuous Response Variable
```{r }
#| echo: TRUE
long_orm  <- orm(mpg   ~ am + disp, data = mtcars, x = TRUE, y = TRUE)
long_blrm <- blrm(mpg  ~ am + disp, iter = 3000, data = mtcars)
long_orm
long_blrm
```



```{r }
#| echo: TRUE
long_orm$stats[grepl("r2", names(long_orm$stats), ignore.case = TRUE )]
R2mz(long_blrm)
```
